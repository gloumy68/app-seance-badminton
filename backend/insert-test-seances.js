require('dotenv').config();
const supabase = require('./supabase');

async function insertTestSeances() {
  console.log('üß™ Insertion des s√©ances de test...\n');

  const testSeances = [
    {
      id: 'seance-mobilite-debutant',
      nom: 'Mobilit√© pour d√©butant',
      description: 'Une s√©ance douce pour am√©liorer votre mobilit√© articulaire et votre souplesse. Parfaite pour les d√©butants.',
      niveau_id: 1, // facile
      type_seance: 'mobilit√©',
      categories: ['mobilit√©', '√©chauffement'],
      objectifs: [
        'Am√©liorer la mobilit√© articulaire',
        'Augmenter la souplesse g√©n√©rale',
        'Pr√©parer le corps √† l\'effort'
      ],
      duree_estimee: 25,
      calories_estimees: 120,
      materiel_requis: ['tapis de yoga'],
      structure: [
        {
          id: 'echauffement_marche_active',
          series: 1,
          temps_series: 300
        },
        {
          id: 'cercles_epaules_legers',
          series: 2,
          repetitions: 10
        },
        {
          id: 'mobilisation_cheville_gauche',
          series: 1,
          temps_series: 120
        },
        {
          id: 'ouverture_hanche_debout',
          series: 2,
          repetitions: 8
        },
        {
          id: 'respiration_allongee',
          series: 1,
          temps_series: 180
        }
      ],
      notes: 'S√©ance accessible √† tous, m√™me sans exp√©rience sportive.',
      tags: ['d√©butant', 'mobilit√©', 'doux'],
      est_publique: true
    },
    {
      id: 'seance-renforcement-intermediaire',
      nom: 'Renforcement complet',
      description: 'S√©ance de renforcement musculaire compl√®te pour tonifier l\'ensemble du corps.',
      niveau_id: 2, // interm√©diaire
      type_seance: 'renforcement',
      categories: ['renforcement', 'gainage'],
      objectifs: [
        'Renforcer les muscles principaux',
        'Am√©liorer la stabilit√©',
        'Augmenter l\'endurance musculaire'
      ],
      duree_estimee: 45,
      calories_estimees: 280,
      materiel_requis: ['tapis de yoga'],
      structure: [
        {
          id: 'echauffement_marche_active',
          series: 1,
          temps_series: 300
        },
        {
          type: 'bloc',
          repetitions: 3,
          contenu: [
            {
              id: 'pompes',
              series: 1,
              repetitions: 8
            },
            {
              id: 'chaise_murale_isometrique',
              series: 1,
              temps_series: 45
            },
            {
              id: 'planche_haute_alternance_jambes',
              series: 1,
              temps_series: 60
            }
          ]
        },
        {
          id: 'pont_fessier_sol',
          series: 3,
          repetitions: 12
        },
        {
          id: 'gainage_dorsal_sol',
          series: 2,
          temps_series: 60
        }
      ],
      notes: 'S√©ance intense, pr√©voir une bouteille d\'eau.',
      tags: ['renforcement', 'complet', 'intensif'],
      est_publique: true
    },
    {
      id: 'seance-etirement-avance',
      nom: '√âtirements avanc√©s',
      description: 'S√©ance d\'√©tirements approfondis pour am√©liorer la souplesse et la r√©cup√©ration.',
      niveau_id: 3, // difficile
      type_seance: '√©tirement',
      categories: ['√©tirement', 'r√©cup√©ration_active'],
      objectifs: [
        'Augmenter la souplesse',
        'Am√©liorer la r√©cup√©ration',
        'R√©duire les tensions musculaires'
      ],
      duree_estimee: 35,
      calories_estimees: 90,
      materiel_requis: ['tapis de yoga', 'coussin'],
      structure: [
        {
          id: 'respiration_allongee',
          series: 1,
          temps_series: 180
        },
        {
          id: 'etirement_actif_dos_sol',
          series: 2,
          temps_series: 90
        },
        {
          id: 'etirement_fessier_sol',
          series: 2,
          temps_series: 60
        },
        {
          id: 'etirement_pectoraux_mur',
          series: 2,
          temps_series: 60
        },
        {
          id: 'etirement_psoas_fente',
          series: 2,
          temps_series: 90
        },
        {
          id: 'ouverture_hanche_sol_respiration',
          series: 1,
          temps_series: 120
        }
      ],
      notes: 'Maintenir chaque position sans forcer, respirer profond√©ment.',
      tags: ['√©tirement', 'souplesse', 'r√©cup√©ration'],
      est_publique: true
    },
    {
      id: 'seance-cardio-mixte',
      nom: 'Cardio mixte',
      description: 'S√©ance cardiovasculaire vari√©e combinant diff√©rents types d\'exercices pour un entra√Ænement complet.',
      niveau_id: 2, // interm√©diaire
      type_seance: 'cardio',
      categories: ['cardio', 'renforcement'],
      objectifs: [
        'Am√©liorer l\'endurance cardiovasculaire',
        'Br√ªler des calories',
        'Renforcer le c≈ìur'
      ],
      duree_estimee: 40,
      calories_estimees: 320,
      materiel_requis: ['tapis de yoga'],
      structure: [
        {
          id: 'echauffement_marche_active',
          series: 1,
          temps_series: 300
        },
        {
          type: 'bloc',
          repetitions: 4,
          contenu: [
            {
              id: 'genoux_hauts_talons_fesses',
              series: 1,
              temps_series: 60
            },
            {
              id: 'planche_haute_alternance_jambes',
              series: 1,
              temps_series: 45
            },
            {
              id: 'pompes',
              series: 1,
              repetitions: 6
            }
          ]
        },
        {
          id: 'gainage_respiratoire_allonge',
          series: 1,
          temps_series: 120
        }
      ],
      notes: 'S√©ance dynamique, adapter l\'intensit√© selon votre niveau.',
      tags: ['cardio', 'dynamique', 'endurance'],
      est_publique: true
    }
  ];

  try {
    for (const seance of testSeances) {
      const { data, error } = await supabase
        .from('seances')
        .upsert([seance], { onConflict: 'id' })
        .select()
        .single();

      if (error) {
        console.error(`‚ùå Erreur lors de l'insertion de "${seance.nom}":`, error);
      } else {
        console.log(`‚úÖ S√©ance "${seance.nom}" ins√©r√©e avec succ√®s (ID: ${data.id})`);
      }
    }

    console.log('\nüéâ Insertion des s√©ances de test termin√©e !');
    
    // Afficher le nombre total de s√©ances
    const { count, error: countError } = await supabase
      .from('seances')
      .select('*', { count: 'exact', head: true });

    if (countError) {
      console.error('‚ùå Erreur lors du comptage:', countError);
    } else {
      console.log(`üìä Total des s√©ances en base: ${count}`);
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

// Ex√©cuter le script
insertTestSeances(); 